##############################################################################
# Ambassador-specific granular commands and utilities                        #
##############################################################################

version: 2.1

executors:

  "aes-linux":
    machine:
      # If you bump this, be sure to bump it in the "oss-linux"
      # executor above, and to bump "install-python.executor-key" in
      # the "amb-linux-install" command below.
      image: "ubuntu-2004:202008-01"
    working_directory: ~/project

commands:

  "amb-linux-install":
    steps:
      - install-python:
          executor-key: "202008-01"
      - pip-install:
          packages: awscli packaging
      - install-go
      - install-kubectl
      - install-node

  "amb-save-workspace":
    steps:
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - "."

  "amb-attach-workspace":
    steps:
      - attach_workspace:
          at: /home/circleci/project

  "amb-checkout":
    steps:
      - checkout:
          path: ~/project

  "amb-login-registry":
    steps:
      - run:
          name: "Docker login"
          command: |
            if [[ -n "$DOCKER_BUILD_USERNAME" && -n "DOCKER_BUILD_PASSWORD" ]]; then
              tries=0
              while true; do
                if [ "$tries" -gt 10 ] ; then
                  circleci step halt
                fi

                fail=0
                out=$(docker login -u="${DOCKER_BUILD_USERNAME}" -p="${DOCKER_BUILD_PASSWORD}" "${DEV_REGISTRY%%/*}") || fail=1
                if [ "$fail" == "0" ] ; then
                  break
                fi

                echo $out
                if echo "$out" | grep "503 Service Unavailable" ; then
                  ((tries++))
                  sleep 30
                else
                  circleci step halt
                fi
              done
            fi

  "amb-config-registry":
    steps:
      - amb-login-registry

  "amb-config-cluster-and-registry":
    steps:
      - amb-login-registry
      - run:
          name: "Configure Kubernetes cluster and Docker registry"
          command: |
            k3d cluster create \
                    --k3s-server-arg "--no-deploy=servicelb" \
                    --k3s-server-arg "--no-deploy=traefik" \
                    --k3s-server-arg "--kubelet-arg=max-pods=255"
            echo >>"$BASH_ENV" 'export DEV_KUBECONFIG=~/.kube/config'
            echo >>"$BASH_ENV" 'unset BASH_ENV'

  "amb-config-helm":
    steps:
      - run:
          name: "Configure Helm repository"
          command: |
            helm repo add datawire https://www.getambassador.io

  "amb-save-logs":
    steps:
      - run:
          name: "Gather test logs"
          when: always
          command: |
            rsync \
              --prune-empty-dirs --archive --include='*/' \
              --include='*.xml' \
              --include='*.tap' \
              --include='*.log' \
              --exclude='*' \
              . \
              /tmp/test-logs
            if test -d ~/.cache/telepresence/logs; then
              rsync \
                --archive \
                ~/.cache/telepresence/logs \
                /tmp/test-logs/telepresence-logs
            fi
      - store_artifacts:
          name: "Store test logs"
          path: /tmp/test-logs
          destination: test-logs
      - store_artifacts:
          name: "Store coverage"
          path: /tmp/cov_html
          destination: coverage
      - run:
          name: "Gather pod logs"
          when: always
          command: |
              mkdir -p /tmp/pod-logs
              podsfile=/tmp/pod-logs/all-pods.txt
              (kubectl get pods --all-namespaces -ocustom-columns="name:.metadata.name,namespace:.metadata.namespace" --no-headers || true) > $podsfile
              (kubectl describe pods --all-namespaces || true) > /tmp/pod-logs/all-pods-described.txt
              (kubectl describe nodes || true) > /tmp/pod-logs/all-nodes-described.txt

              (journalctl -u k3s || true) > /tmp/pod-logs/k3s-systemd.log
              (docker logs $(docker ps -a | grep rancher/k3s | awk '{print $1}') 2>&1 || true) > /tmp/pod-logs/k3s.log

              cat $podsfile | while IFS= read -r line; do
                name=$(echo $line | awk '{print $1}')
                ns=$(echo $line | awk '{print $2}')
                nsdir=/tmp/pod-logs/${ns}/
                mkdir -p $nsdir
                outfile=${nsdir}/${name}-pod.log
                (kubectl logs -n $ns $name > $outfile || echo "FAILED, status $ret, continuing...") || true
              done
      - store_artifacts:
          name: "Store pod logs"
          path: /tmp/pod-logs
          destination: pod-logs

  "amb-skip-if-bad-chart-version":
    steps:
      - run:
          name: "Diff changes"
          command: |
            thisversion=$(grep ^version: charts/edge-stack/Chart.yaml | awk ' { print $2 }')

            if [[ "<< pipeline.git.tag >>" != "chart-v${thisversion}" ]]; then
              echo "Chart version ${thisversion} doesn't match tag << pipeline.git.tag >>; aborting"
              exit 1
            fi
