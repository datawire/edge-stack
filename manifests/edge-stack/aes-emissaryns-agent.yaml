# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edge-stack-agent
  namespace: emissary
  labels:
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edge-stack-agent
  labels:
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.getambassador.io/role-group: edge-stack-agent
rules: []
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edge-stack-agent-pods
  labels:
    rbac.getambassador.io/role-group: edge-stack-agent
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
rules:
- apiGroups: ['']
  resources: [pods]
  verbs: [get, list, watch]
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edge-stack-agent-deployments
  labels:
    rbac.getambassador.io/role-group: edge-stack-agent
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
rules:
- apiGroups: [apps, extensions]
  resources: [deployments]
  verbs: [get, list, watch]
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edge-stack-agent-endpoints
  labels:
    rbac.getambassador.io/role-group: edge-stack-agent
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
rules:
- apiGroups: ['']
  resources: [endpoints, services]
  verbs: [get, list, watch]
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edge-stack-agent-rollouts
  labels:
    rbac.getambassador.io/role-group: edge-stack-agent
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
rules:
- apiGroups: [argoproj.io]
  resources: [rollouts, rollouts/status]
  verbs: [get, list, watch, patch]
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edge-stack-agent-applications
  labels:
    rbac.getambassador.io/role-group: edge-stack-agent
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
rules:
- apiGroups: [argoproj.io]
  resources: [applications]
  verbs: [get, list, watch]
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edge-stack-agent
  labels:
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edge-stack-agent
subjects:
- kind: ServiceAccount
  name: edge-stack-agent
  namespace: emissary
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: edge-stack-agent-config
  namespace: emissary
  labels:
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
rules:
- apiGroups: ['']
  resources: [configmaps]
  verbs: [get, list, watch]
- apiGroups: ['']
  resources: [secrets]
  verbs: [get, list, create, delete, patch, watch]
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: edge-stack-agent-config
  namespace: emissary
  labels:
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: edge-stack-agent-config
subjects:
- kind: ServiceAccount
  name: edge-stack-agent
  namespace: emissary
---
# Source: edge-stack/charts/emissary-ingress/templates/admin-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: edge-stack-admin
  namespace: emissary
  labels:
    app.kubernetes.io/name: edge-stack

    app.kubernetes.io/instance: edge-stack
    app.kubernetes.io/part-of: edge-stack
    app.kubernetes.io/managed-by: getambassador.io
    # Hard-coded label for Prometheus Operator ServiceMonitor
    service: ambassador-admin
    product: aes
  annotations:
    a8r.io/owner: Ambassador Labs
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/description: The Ambassador Edge Stack admin service for internal use and
      health checks.
    a8r.io/documentation: https://www.getambassador.io/docs/edge-stack/latest/
    a8r.io/chat: http://a8r.io/Slack
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/support: https://www.getambassador.io/about-us/support/
    a8r.io/dependencies: None
spec:
  type: ClusterIP
  ports:
  - port: 8877
    targetPort: admin
    protocol: TCP
    name: ambassador-admin
  - port: 8005
    targetPort: 8005
    protocol: TCP
    name: ambassador-snapshot
  selector:
    app.kubernetes.io/name: edge-stack
    app.kubernetes.io/instance: edge-stack
---
# Source: edge-stack/charts/emissary-ingress/charts/agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-stack-agent
  namespace: emissary
  labels:
    app.kubernetes.io/name: agent
    helm.sh/chart: agent-1.0.20
    app.kubernetes.io/version: 1.0.20
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: edge-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: agent
      app.kubernetes.io/instance: edge-stack
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agent
        app.kubernetes.io/instance: edge-stack
    spec:
      serviceAccountName: edge-stack-agent
      securityContext: {}
      containers:
      - name: agent
        image: docker.io/ambassador/ambassador-agent:1.0.20
        imagePullPolicy: IfNotPresent
        securityContext: {}
        ports:
        - name: http
          containerPort: 8080
        resources: {}
        env:
        - name: LOG_LEVEL
          value: info
        - name: AGENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AGENT_CONFIG_RESOURCE_NAME
          value: edge-stack-agent-cloud-token
        - name: RPC_CONNECTION_ADDRESS
          value: https://app.getambassador.io/
        - name: AES_SNAPSHOT_URL
          value: http://edge-stack-admin.ambassador:8005/snapshot-external
        - name: AES_DIAGNOSTICS_URL
          value: http://edge-stack-admin.ambassador:8877/ambassador/v0/diag/?json=true
        - name: AES_REPORT_DIAGNOSTICS_TO_CLOUD
          value: 'true'
