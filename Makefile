EDGE_STACK_HOME := $(patsubst %/,%,$(dir $(abspath $(lastword $(MAKEFILE_LIST)))))

SHELL := /bin/bash
HELM_OUTPUT_DIR := $(EDGE_STACK_HOME)/build/helm/

generate/files += $(EDGE_STACK_HOME)/manifests/edge-stack/aes.yaml
generate/files += $(EDGE_STACK_HOME)/manifests/edge-stack/aes-defaultns.yaml
generate/files += $(EDGE_STACK_HOME)/manifests/edge-stack/aes-defaultns-migration.yaml
generate/files += $(EDGE_STACK_HOME)/manifests/edge-stack/aes-emissaryns.yaml
generate/files += $(EDGE_STACK_HOME)/manifests/edge-stack/aes-emissaryns-migration.yaml
generate/files += $(EDGE_STACK_HOME)/manifests/edge-stack/resources-migration.yaml
generate/files += $(EDGE_STACK_HOME)/CHANGELOG.md
generate/files += $(EDGE_STACK_HOME)/.circleci/config.yml

$(EDGE_STACK_HOME)/venv:
	python3 -m venv $@
	$@/bin/pip3 install ruamel.yaml

FORCE:
.PHONY: FORCE
.SECONDARY:

$(EDGE_STACK_HOME)/charts/edge-stack/charts: %/charts: %/Chart.yaml
	rm -rf $@
	cd $* && helm dependency update

$(HELM_OUTPUT_DIR): $(EDGE_STACK_HOME)/charts/edge-stack/charts FORCE
	rm -rf $@
	mkdir -p $@
	helm template edge-stack --output-dir $@ -n ambassador $(EDGE_STACK_HOME)/charts/edge-stack

helm-namespace.aes                      = ambassador
helm-namespace.aes-defaultns            = default
helm-namespace.aes-defaultms-migration  = default
helm-namespace.aes-emissaryns           = emissary
helm-namespace.aes-emissaryns-migration = emissary
helm-namespace.resources-migration      = default
$(EDGE_STACK_HOME)/k8s-config/%/helm-expanded.yaml: \
  $(EDGE_STACK_HOME)/charts/edge-stack/charts \
  $(EDGE_STACK_HOME)/k8s-config/%/values.yaml \
  FORCE
	helm template --namespace=$(helm-namespace.$*) --values=$(@D)/values.yaml edge-stack $(EDGE_STACK_HOME)/charts/edge-stack >$@
$(EDGE_STACK_HOME)/manifests/edge-stack/%.yaml: \
  $(EDGE_STACK_HOME)/k8s-config/%/helm-expanded.yaml \
  $(EDGE_STACK_HOME)/k8s-config/%/require.yaml \
  $(EDGE_STACK_HOME)/k8s-config/create_yaml.py \
  $(EDGE_STACK_HOME)/venv
	. $(EDGE_STACK_HOME)/venv/bin/activate && $(filter %.py,$^) $(filter %/helm-expanded.yaml,$^) $(filter %/require.yaml,$^) >$@

push-manifests:
	$(EDGE_STACK_HOME)/manifests/push_manifests.sh
.PHONY: push-manifests

generate:
	$(MAKE) generate-clean
	$(MAKE) $(generate/files)
.PHONY: generate

generate-clean:
	rm -rf $(generate/files)
.PHONY: generate

$(EDGE_STACK_HOME)/CHANGELOG.md: $(EDGE_STACK_HOME)/docs/CHANGELOG.tpl $(EDGE_STACK_HOME)/docs/releaseNotes.yml
	docker run --rm \
	  -v $(EDGE_STACK_HOME)/docs/CHANGELOG.tpl:/tmp/CHANGELOG.tpl \
	  -v $(EDGE_STACK_HOME)/docs/releaseNotes.yml:/tmp/releaseNotes.yml \
	  hairyhenderson/gomplate --verbose --file /tmp/CHANGELOG.tpl --datasource relnotes=/tmp/releaseNotes.yml > CHANGELOG.md

$(EDGE_STACK_HOME)/.circleci/yq: $(EDGE_STACK_HOME)/.circleci/yq.d/go.mod
	cd $(<D) && go build -o $(abspath $@) github.com/mikefarah/yq/v3

$(EDGE_STACK_HOME)/.circleci/config.yml: $(EDGE_STACK_HOME)/.circleci/yq $(MAKEFILE_LIST) $(EDGE_STACK_HOME)/.circleci/config.yml.d $(sort $(wildcard $(EDGE_STACK_HOME)/.circleci/config.yml.d/*.yml))
	{ echo '# Generated by `make generate`. DO NOT EDIT.'; echo; $(<D)/$(<F) merge $(filter %.yml,$^); } > $@

clean-manifests:
	@cd $(EDGE_STACK_HOME) && git restore $(EDGE_STACK_HOME)/manifests/*/*.yaml
.PHONY: clean-manifests

include $(EDGE_STACK_HOME)/charts/charts.mk
